@echo off
REM Launch On Los (LOL) - Production Setup Script for Windows
REM This script sets up the complete development and production environment

echo ðŸš€ Launch On Los (LOL) - Production Setup
echo ==========================================

REM Check if Node.js is installed
echo [INFO] Checking Node.js installation...
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERROR] Node.js is not installed. Please install Node.js 18+ first.
    pause
    exit /b 1
)

REM Check if Yarn is installed
echo [INFO] Checking Yarn installation...
yarn --version >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERROR] Yarn is not installed. Please install Yarn first.
    pause
    exit /b 1
)

echo [SUCCESS] Node.js and Yarn are installed

REM Create .env file from template
echo [INFO] Creating .env file from template...
if not exist .env (
    (
        echo # Launch On Los (LOL) - Environment Configuration
        echo # Generated by setup script on %date% %time%
        echo.
        echo # =============================================================================
        echo # BLOCKCHAIN CONFIGURATION
        echo # =============================================================================
        echo RPC_URL=https://rpc.analos.io/
        echo EXPLORER_URL=https://explorer.analos.io/
        echo CHAIN_ID=analos
        echo.
        echo # =============================================================================
        echo # WALLET CONFIGURATION
        echo # =============================================================================
        echo WALLET_PRIVATE_KEY=your_deployer_wallet_private_key_here
        echo FEE_WALLET=your_fee_collection_wallet_here
        echo.
        echo # =============================================================================
        echo # STORAGE CONFIGURATION
        echo # =============================================================================
        echo BUNDLR_NETWORK_URL=https://node1.bundlr.network
        echo ARWEAVE_WALLET_PRIVATE_KEY=your_arweave_wallet_private_key_base64_encoded
        echo.
        echo # =============================================================================
        echo # SERVER CONFIGURATION
        echo # =============================================================================
        echo PORT=3001
        echo NODE_ENV=development
        echo CORS_ORIGIN=http://localhost:3000
        echo.
        echo # =============================================================================
        echo # RATE LIMITING
        echo # =============================================================================
        echo RATE_LIMIT_WINDOW_MS=900000
        echo RATE_LIMIT_MAX_REQUESTS=100
        echo.
        echo # =============================================================================
        echo # FILE UPLOAD CONFIGURATION
        echo # =============================================================================
        echo MAX_FILE_SIZE=10485760
        echo ALLOWED_FILE_TYPES=image/png,image/jpeg,image/gif,image/webp
        echo.
        echo # =============================================================================
        echo # COLLECTION SETTINGS
        echo # =============================================================================
        echo MAX_COLLECTION_SIZE=10000
        echo MIN_MINT_PRICE=0.001
        echo MAX_MINT_PRICE=10
        echo DEFAULT_FEE_PERCENTAGE=2.5
        echo.
        echo # =============================================================================
        echo # FEATURE FLAGS
        echo # =============================================================================
        echo ENABLE_WHITELIST=true
        echo ENABLE_ROYALTIES=true
        echo ENABLE_BURNING=true
        echo ENABLE_UPDATES=true
        echo.
        echo # =============================================================================
        echo # MARKETPLACE INTEGRATION
        echo # =============================================================================
        echo MAGIC_EDEN_API_KEY=your_magic_eden_api_key_here
        echo TENSOR_API_KEY=your_tensor_api_key_here
        echo OPENSEA_API_KEY=your_opensea_api_key_here
        echo.
        echo # =============================================================================
        echo # NOTIFICATIONS
        echo # =============================================================================
        echo DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your_webhook_url
        echo SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your_webhook_url
        echo.
        echo # =============================================================================
        echo # MONITORING ^& ANALYTICS
        echo # =============================================================================
        echo SENTRY_DSN=https://your_sentry_dsn_here
        echo GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX
        echo.
        echo # =============================================================================
        echo # SECURITY
        echo # =============================================================================
        echo JWT_SECRET=your_jwt_secret_here
        echo ENCRYPTION_KEY=your_32_character_encryption_key_here
        echo.
        echo # =============================================================================
        echo # LOGGING
        echo # =============================================================================
        echo LOG_LEVEL=info
        echo LOG_FILE_PATH=./logs/app.log
        echo.
        echo # =============================================================================
        echo # DEVELOPMENT
        echo # =============================================================================
        echo DEBUG=false
        echo VERBOSE_LOGGING=false
        echo.
        echo # =============================================================================
        echo # PRODUCTION DEPLOYMENT
        echo # =============================================================================
        echo NEXT_PUBLIC_APP_URL=https://launchonlos.com
        echo BACKEND_URL=https://api.launchonlos.com
        echo CDN_URL=https://cdn.launchonlos.com
    ) > .env
    echo [SUCCESS] .env file created
    echo [WARNING] Please edit .env file and fill in your actual values
) else (
    echo [WARNING] .env file already exists, skipping creation
)

REM Create necessary directories
echo [INFO] Creating necessary directories...
if not exist logs mkdir logs
if not exist tmp mkdir tmp
if not exist tmp\sessions mkdir tmp\sessions
if not exist tmp\mock-storage mkdir tmp\mock-storage
if not exist backend\logs mkdir backend\logs
if not exist frontend\public\images mkdir frontend\public\images
echo [SUCCESS] Directories created

REM Install dependencies
echo [INFO] Installing dependencies...
echo [INFO] Installing root dependencies...
yarn install
if %errorlevel% neq 0 (
    echo [ERROR] Failed to install root dependencies
    pause
    exit /b 1
)

echo [INFO] Installing backend dependencies...
cd backend
yarn install
if %errorlevel% neq 0 (
    echo [ERROR] Failed to install backend dependencies
    pause
    exit /b 1
)
cd ..

echo [INFO] Installing frontend dependencies...
cd frontend
yarn install
if %errorlevel% neq 0 (
    echo [ERROR] Failed to install frontend dependencies
    pause
    exit /b 1
)
cd ..

echo [INFO] Installing contracts dependencies...
cd contracts
yarn install
if %errorlevel% neq 0 (
    echo [ERROR] Failed to install contracts dependencies
    pause
    exit /b 1
)
cd ..

echo [SUCCESS] All dependencies installed successfully

REM Build the project
echo [INFO] Building the project...
echo [INFO] Building shared package...
cd shared
yarn build
if %errorlevel% neq 0 (
    echo [WARNING] Failed to build shared package
)
cd ..

echo [INFO] Building backend...
cd backend
yarn build
if %errorlevel% neq 0 (
    echo [WARNING] Failed to build backend
)
cd ..

echo [INFO] Building frontend...
cd frontend
yarn build
if %errorlevel% neq 0 (
    echo [WARNING] Failed to build frontend
)
cd ..

echo [SUCCESS] Project built successfully

REM Create start scripts
echo [INFO] Creating start scripts...

REM Create start-all.bat
(
    echo @echo off
    echo echo ðŸš€ Starting Launch On Los (LOL) - All Services
    echo echo ==============================================
    echo.
    echo echo Starting backend server...
    echo start "LOL Backend Server" cmd /k "cd backend && yarn dev"
    echo.
    echo timeout /t 3 /nobreak ^>nul
    echo.
    echo echo Starting frontend server...
    echo start "LOL Frontend Server" cmd /k "cd frontend && yarn dev"
    echo.
    echo echo âœ… All services started!
    echo echo Backend: http://localhost:3001
    echo echo Frontend: http://localhost:3000
    echo echo.
    echo echo Press any key to exit...
    echo pause ^>nul
) > start-all.bat

echo [SUCCESS] Start scripts created

echo.
echo [SUCCESS] ðŸŽ‰ Setup completed successfully!
echo.
echo Next steps:
echo 1. Edit .env file with your actual values
echo 2. Run 'start-all.bat' to start both servers
echo 3. Visit http://localhost:3000 to access the frontend
echo 4. Visit http://localhost:3001/health to check backend health
echo.
echo For production deployment, see DEPLOYMENT.md
echo.
pause

